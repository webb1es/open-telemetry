receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://localhost:3000"
            - "http://localhost:3001"

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  resource:
    attributes:
      - key: environment
        value: development
        action: upsert
      - key: service.instance.id
        from_attribute: host.name
        action: insert

  memory_limiter:
    limit_mib: 256
    check_interval: 1s

exporters:
  # OTLP exporter for Jaeger
  otlp/jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: otel_demo
    const_labels:
      environment: development

  # Logging exporter for debugging
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  # OTLP HTTP exporter for Azure Monitor (optional, disabled by default)
  # otlphttp:
  #   endpoint: "${AZURE_MONITOR_OTLP_ENDPOINT}"
  #   headers:
  #     "x-ms-instrumentation-key": "${AZURE_MONITOR_INSTRUMENTATION_KEY}"
  #   tls:
  #     insecure: false

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [otlp/jaeger, logging]

    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888